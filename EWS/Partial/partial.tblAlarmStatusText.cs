//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SQLite;
using System.Data.SqlClient;
using System.Drawing;
using System.Text;
using System.Windows.Forms;


namespace EWS.DCSTables
{
	
	
	public partial class tblAlarmStatusText 
    {
        private bool PreDeleteTriger()
        {

            return true;
        }
        private bool PostDeleteTriger()
        {

            return true;
        }
        private bool PreInsertTriger()
        {

            return true;
        }
        private bool PostInsertTriger()
        {

            return true;
        }
        private bool PreUpdateTriger()
        {

            return true;
        }
        private bool PostUpdateTriger()
        {

            return true;
        }
		
	}
	
	
	public partial class tblAlarmStatusTextCollection 
    {
        public tblAlarmStatusTextCollection(tblSolution parent)
        {
            m_SolutionID_tblSolution = parent;
        }

        public bool Load()
        {
            bool ret = true;
            List<long> idlist = new List<long>();
            if (Common.Conn == null)
            {
                Common.Conn = new SQLiteConnection(Common.ConnectionString);
                Common.Conn.Open();
            }
            SQLiteDataReader myReader = null;
            SQLiteCommand myCommand = new SQLiteCommand();
            try
            {
                myReader = null;
                myCommand.CommandText = @"SELECT * FROM [tblAlarmStatusText] ;";
                myCommand.Connection = Common.Conn;
                myReader = myCommand.ExecuteReader();
                while (myReader.Read())
                {
                    idlist.Add(myReader.GetInt64(myReader.GetOrdinal("ID")));

                }

                myReader.Close();
                myCommand.Dispose();
                int count = idlist.Count;
                foreach (long id in idlist)// (int i = 0; i < count ; i++)
                {
                    tblAlarmStatusText tblalarmstatustext = new tblAlarmStatusText();
                    tblalarmstatustext.ID = id;// idlist[i];
                    tblalarmstatustext.m_SolutionID_tblSolution = this.m_SolutionID_tblSolution;
                    tblalarmstatustext.Select();

                    this.Add(tblalarmstatustext);
                }
            }
            catch (SQLiteException ae)
            {
                return false;
                // MessageBox.Show(ae.Message.ToString());
            }



            return ret;
        }
	}
}
