//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SQLite;
using System.Data.SqlClient;
using System.Drawing;
using System.Text;
using System.Windows.Forms;


namespace DCS.DCSTables
{
	
	
	public partial class tblFBDPinConnection 
	{
        
		
	}
	
	
	
	public partial class tblFBDPinConnectionCollection 
	{
        

        
        public override bool Load()
        {
            bool ret = true;
            List<long> idlist = new List<long>();
            if (Common.Conn == null)
            {
                Common.Conn = new SQLiteConnection(Common.ConnectionString);
                Common.Conn.Open();
            }
            SQLiteDataReader myReader = null;
            SQLiteCommand myCommand = new SQLiteCommand();
            //if (_SqlConnectionConnection.State == System.Data.ConnectionState.Open)
            //    _SqlConnectionConnection.Close();
            //_SqlConnectionConnection.ConnectionString = Common.ConnectionString;
            //_SqlConnectionConnection.Open();
            try
            {
                myReader = null;
                myCommand.CommandText = @"SELECT * FROM [tblFBDPinConnection]  WHERE [pouID]= " + this.m_pouID_tblPou.pouID + ";";// " order by oIndex;";
                myCommand.Connection = Common.Conn;
                myReader = myCommand.ExecuteReader();
                while (myReader.Read())
                {
                    idlist.Add(myReader.GetInt64(myReader.GetOrdinal("FBDPinConnectionID")));      
                }

                myReader.Close();
                myCommand.Dispose();
                //_SqlConnectionConnection.Close();

                for (int i = 0; i < idlist.Count; i++)
                {
                    tblFBDPinConnection tblfbdpinconnection = new tblFBDPinConnection();

                    tblfbdpinconnection.FBDPinConnectionID = idlist[i];
                    tblfbdpinconnection.m_pouID_tblPou = this._pouID_tblPou;
                    tblfbdpinconnection.Select();
                    this.Add(tblfbdpinconnection);
                }

            }
            catch (SQLiteException ae)
            {
                System.Windows.Forms.MessageBox.Show(ae.Message);
                return false;
            }



            return ret;
        }
        public bool RemoveFromTable()
        {
            try
            {
                if (Common.Conn == null)
                {
                    Common.Conn = new SQLiteConnection(Common.ConnectionString);
                    Common.Conn.Open();
                }
                SQLiteCommand Com = Common.Conn.CreateCommand();
                SQLiteCommand ComSync = Common.Conn.CreateCommand();
                Com.CommandText = @"DELETE FROM [tblFBDPinConnection] WHERE [pouID]= " + m_pouID_tblPou.pouID + ";";
                ComSync.CommandText = "PRAGMA foreign_keys=ON";

                //Conn.Open();
                ComSync.ExecuteNonQuery();
                int rowseffected = Com.ExecuteNonQuery();
                //Conn.Close();
                ComSync.Dispose();
                Com.Dispose();
                //Conn.Dispose();
                this.Clear();
                return true;

            }
            catch (SQLiteException ae)
            {
                System.Windows.Forms.MessageBox.Show(ae.Message);
                return false;
            }
        }
		
	}
}
